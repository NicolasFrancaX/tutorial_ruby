---
title:      Nomes em Ruby
created_at: 2009-07-03 23:39:48.265309 -03:00
filter:
  - erb
  - textile
---
p(title). <%= h(@page.title) %>

*Nomes em Ruby* são usados para se referir a constantes, variáveis, métodos, classes e módulos. _O primeiro caractere de um nome ajuda o Ruby a distinguir o uso pretendido._ Determinados nomes são palavras reservadas e não deveriam ser utilizados como nome de variáveis, métodos, classes ou módulos. Letras minúsculas significa do caractere "a" até "z". Letras maiúsculas significa "A" até "Z", e dígitos significa "0" até "9". Um nome é uma letra maiúscula, uma minúscula, ou um underscore ("_"), seguido por *caracteres de nome* (isso é uma combinação de letras maiúsculas e minúsculas, underscores e dígitos).

h2. Variáveis

Variáveis no Ruby podem conter dados de qualquer tipo. Você pode usar variáveis em seus programas Ruby sem qualquer declaração. O nome de uma variável por si só denota seu escopo (local, global, instância, etc).

* O nome de uma variável *local* (declarada dentro de um objeto) conciste de uma letra minúscula (ou um underscore) seguido por caracteres de nome (azul, _z, bater_e_correr).
* O nome de uma variável de *instância* (declarada dentro de um objeto sempre pertence a qualquer que seja o objeto que *self* se refira) começa com uma arroba ("@") seguida por um nome (@assinatura, @_, @Contador).
* O nome de uma variável de *classe* (declarada dentro de uma classe) começa com duas arrobas ("@@") seguidas de um nome (@@assinatura, @@_, @@Contador). Uma variável de classe é compartilhada por todos os objetos de uma classe. Somente uma cópia de uma variável de classe particular existe para uma dada classe. Variáveis de classe usadas no nível mais alto são definidas em *Object* e se comportam como variáveis globais. Essas são raramente utilizadas em programas Ruby.
* Variáveis *globais* começam com um símbolo de dólar ("$") seguido por caracteres de nome...

Continua...
